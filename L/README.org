* Mapping between the course and the book

Short version: study week N = book chapter N.

More details below.

* Week 1 lecture videos:
+ video short-hands: 
  Lw.l.p is week w, lecture l, part p
  The l=0 case are the "extra lectures on Haskell".
|--------+-------+---------------------+--------|
| [[https://www.youtube.com/watch?v=u5B-jiFDKto&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=1&t=3s][L1.0.1]] | 00:00 | TDD: id, const, (.) | §1.2   |
| [[https://www.youtube.com/watch?v=Mr_YFDX0C1w&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=2][L1.0.2]] | 00:00 | (,), swap, fst      | §1.2   |
| [[https://www.youtube.com/watch?v=Mr_YFDX0C1w&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=2][L1.0.2]] | 10:58 | tupling transform   | §1.2   |
| [[https://www.youtube.com/watch?v=NsSVRkxDdfQ&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=3][L1.0.3]] | 00:00 | Either, Left, Right | §1.2   |
| [[https://www.youtube.com/watch?v=NsSVRkxDdfQ&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=3][L1.0.3]] | 04:12 | either, patterns    | §1.2   |
| [[https://www.youtube.com/watch?v=nsXgf1HF7E8&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=4&t=1019][L1.1.1]] | 00:00 | L1.1 Course admin   |        |
| [[https://www.youtube.com/watch?v=nsXgf1HF7E8&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=4&t=1019][L1.1.1]] | 18:00 | DSL definition      | §1.1.1 |
| [[https://www.youtube.com/watch?v=nsXgf1HF7E8&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=4&t=1019][L1.1.1]] | 20:00 | Jamboard examples   | §1.7   |
| [[https://www.youtube.com/watch?v=nsXgf1HF7E8&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=4&t=1019][L1.1.1]] | 25:00 | "the function f(x)" | §1.7   |
| [[https://www.youtube.com/watch?v=nsXgf1HF7E8&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=4&t=1019][L1.1.1]] | 27:00 | Types               | §1.1   |
| [[https://www.youtube.com/watch?v=nsXgf1HF7E8&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=4&t=1019][L1.1.1]] | 31:00 | enum Bool->Bool     | §1.1.2 |
| [[https://www.youtube.com/watch?v=80DeRjb06vI&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=8&t=28s][L1.1.2]] | 00:00 | Haskell intro       | §1.2   |
| [[https://www.youtube.com/watch?v=80DeRjb06vI&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=8&t=28s][L1.1.2]] | 05:20 | enum Bool->Bool     | §1.1.2 |
| [[https://www.youtube.com/watch?v=80DeRjb06vI&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=8&t=28s][L1.1.2]] | 09:50 | floating point      | §1.1.3 |
| [[https://www.youtube.com/watch?v=80DeRjb06vI&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=8&t=28s][L1.1.2]] | 15:00 | Associative law     | §1.6   |
| [[https://www.youtube.com/watch?v=80DeRjb06vI&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=8&t=28s][L1.1.2]] | 18:47 | DSL for expressions | §1.2   |
| [[https://www.youtube.com/watch?v=80DeRjb06vI&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=8&t=28s][L1.1.2]] | 26:30 | Expr. of one var.   | §1.7   |
| [[https://www.youtube.com/watch?v=80DeRjb06vI&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=8&t=28s][L1.1.2]] | 43:00 | TA intr. themselves |        |
| [[https://youtu.be/mLqcrYUpHvU][L1.2.1]] | 00:00 | L1.2 Course admin   |        |
| [[https://youtu.be/SD4rF9VebJc][L1.2.2]] | 00:00 | N->Z->Q->R->C       |        |
| [[https://www.youtube.com/watch?v=tKznC6F_P0s][L1.2.3]] | 01:00 | Live code complex   | §1.4   |
| [[https://youtu.be/QSc-kFxXUbA][L1.2.4]] | 00:00 | Complex cont.       | §1.4   |
| [[https://youtu.be/QSc-kFxXUbA][L1.2.4]] | 02:57 | Eq check + deriving | §1.4   |
| [[https://youtu.be/QSc-kFxXUbA][L1.2.4]] | 14:18 | DSL complex         | §1.5   |
| [[https://youtu.be/QSc-kFxXUbA][L1.2.4]] | 38:20 | Types               | §1.2   |
|--------+-------+---------------------+--------|

* Week 2 lecture videos:
|--------+-------+-------------------------+--------|
| [[https://www.youtube.com/watch?v=px_b66qzK2w&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=10       ][L2.1.1]] | 00:00 | L2.1 admin              | §2     |
| [[https://www.youtube.com/watch?v=j456QTzS7O4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=11       ][L2.1.2]] | 00:00 | Propositional Calculus  | §2.1   |
| [[https://www.youtube.com/watch?v=j456QTzS7O4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=11&t=200 ][L2.1.2]] | 03:20 | Truth table for (=>)    | §2.1.2 |
| [[https://www.youtube.com/watch?v=j456QTzS7O4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=11&t=384 ][L2.1.2]] | 06:24 | Truth tab. swap         | §2.1.2 |
| [[https://www.youtube.com/watch?v=j456QTzS7O4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=11&t=630 ][L2.1.2]] | 10:30 | Tautology               | §2.1.2 |
| [[https://www.youtube.com/watch?v=j456QTzS7O4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=11&t=817 ][L2.1.2]] | 13:37 | data Prop, eval start   | §2.1.1 |
| [[https://www.youtube.com/watch?v=j456QTzS7O4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=11&t=1568][L2.1.2]] | 26:08 | AndIntro, OrIntroL      | §2.1.3 |
| [[https://www.youtube.com/watch?v=j456QTzS7O4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=11&t=1806][L2.1.2]] | 30:06 | fst, snd, orElim        | §2.1.6 |
| [[https://www.youtube.com/watch?v=fM2PYaVUH5g&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=12       ][L2.1.3]] | 00:00 | Pure set theory         | §2.3   |
| [[https://www.youtube.com/watch?v=fM2PYaVUH5g&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=12&t=529 ][L2.1.3]] | 08:49 | union, card examples    | §2.3   |
| [[https://www.youtube.com/watch?v=fM2PYaVUH5g&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=12&t=1025][L2.1.3]] | 17:05 | union computation table | §2.3   |
| [[https://www.youtube.com/watch?v=4pyw7pw_yr4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=13       ][L2.1.4]] | 00:00 | live coding Prop, eval  | §2.1   |
| [[https://www.youtube.com/watch?v=4pyw7pw_yr4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=13&t=220 ][L2.1.4]] | 03:40 | impl. eval without Name | §2.1   |
| [[https://www.youtube.com/watch?v=4pyw7pw_yr4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=13&t=441 ][L2.1.4]] | 07:21 | eval: adding Name case  | §2.1   |
| [[https://www.youtube.com/watch?v=4pyw7pw_yr4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=13&t=755 ][L2.1.4]] | 12:35 | lift2 and friends       | §1.3   |
|--------+-------+-------------------------+--------|
| [[https://www.youtube.com/watch?v=LwoQjzFBt5k&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=14][L2.2.1]] | 00:00 | First Order Logic       | §2.2   |
| [[https://www.youtube.com/watch?v=LwoQjzFBt5k&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=14&t=269][L2.2.1]] | 04:29 | FOL predicate examples  | §2.2   |
| [[https://www.youtube.com/watch?v=LwoQjzFBt5k&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=14&t=519][L2.2.1]] | 08:39 | Quantifiers             | §2.2.2 |
| [[https://www.youtube.com/watch?v=LwoQjzFBt5k&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=14&t=938][L2.2.1]] | 15:38 | data FOL, data Dom      | §2.2   |
| [[https://www.youtube.com/watch?v=LwoQjzFBt5k&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=14&t=1298][L2.2.1]] | 21:38 | GADTs extension mention | §2.2   |
| [[https://www.youtube.com/watch?v=LwoQjzFBt5k&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=14][L2.2.1]] | 23:00 | Interpret FOL-syntax    | §2.2   |
| [[https://www.youtube.com/watch?v=LwoQjzFBt5k&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=14&t=1668][L2.2.1]] | 27:48 | Typed quantifiers       | §2.2.4 |
| [[https://youtu.be/LwoQjzFBt5k?list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&t=1978][L2.2.1]] | 32:58 | de Morgan, not quant.   | §2.2.4 |
| [[https://www.youtube.com/watch?v=RauIPv-hEY0&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=15][L2.2.2]] | 00:00 | Proof by contradiction  | §2.4.1 |
| [[https://www.youtube.com/watch?v=RauIPv-hEY0&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=15&t=874][L2.2.2]] | 14:34 | Proof by cases          | §2.4.2 |
| [[https://www.youtube.com/watch?v=Ey_9KP-9wlU&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=16][L2.2.3]] | 00:00 | Live code: proof terms  | §2.1.5 |
| [[https://www.youtube.com/watch?v=Ey_9KP-9wlU&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=23&t=518s ][L2.2.3]] | 08:38 | inhabited types are Tru | §2.1.6 |
| [[https://www.youtube.com/watch?v=Ey_9KP-9wlU&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=23&t=770s ][L2.2.3]] | 13:02 | Or p q => Or q p        | §2.1.6 |
| [[https://www.youtube.com/watch?v=Ey_9KP-9wlU&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=23&t=770s ][L2.2.3]] | 15:18 | Not(Not(Or p (Not p)))  | §2.1.7 |
| [[https://www.youtube.com/watch?v=Lz17yvfSacE&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=18][L2.3.1]] | 00:00 | Prop and its eval       | §2.1.1 |
| [[https://www.youtube.com/watch?v=Lz17yvfSacE&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=18&t=196][L2.3.1]] | 03:16 | data Proof + checkProof | §2.1.3 |
| [[https://www.youtube.com/watch?v=Lz17yvfSacE&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=18&t=546][L2.3.1]] | 09:06 | checkProof examples     | §2.1.4 |
|--------+-------+-------------------------+--------|

* Week 3 lecture videos:
|--------+-------+----------------------------------+-----------|
| [[https://www.youtube.com/watch?v=kqhGY6v7feU&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=18][L3.1.1]] | 00:00 | Limit of function                | §2.5.3    |
| [[https://www.youtube.com/watch?v=kqhGY6v7feU&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=18&t=365][L3.1.1]] | 06:01 | Scope check lim logic            | §2.5.3    |
| [[https://www.youtube.com/watch?v=lBxyARMvhbY&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=19][L3.1.2]] | 00:00 | Lim properties and types         | §3.1      |
| [[https://www.youtube.com/watch?v=lBxyARMvhbY&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=19&t=630][L3.1.2]] | 10:30 | Deriv. of function               | §3.1      |
| [[https://www.youtube.com/watch?v=wxFVoFZ-Sz4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=20][L3.1.3]] | 00:00 | Deriv. examples                  | §3.1      |
| [[https://www.youtube.com/watch?v=wxFVoFZ-Sz4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=20&t=300][L3.1.3]] | 05:00 | D (^2)  =  (2*)                  | §3.1      |
| [[https://www.youtube.com/watch?v=wxFVoFZ-Sz4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=20&t=732][L3.1.3]] | 12:12 | D (f + g)  =  D f  +  D g        | §3.1      |
| [[https://www.youtube.com/watch?v=rBj7-4xAzM4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=21][L3.1.4]] | 00:00 | Live coding deriv in Haskell     | §3.6      |
| [[https://www.youtube.com/watch?v=rBj7-4xAzM4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=21&t=461][L3.1.4]] | 07:41 | deriv :: FunExp -> FunExp        | §3.6      |
| [[https://www.youtube.com/watch?v=zgRBO4qAmiw&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=22][L3.2.1]] | 00:00 | Lecture 3.2 admin                |           |
| [[https://www.youtube.com/watch?v=UWJrpLFxkSA&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=23][L3.2.2]] | 00:00 | Partial derivatives quote        | §3.2      |
| [[https://www.youtube.com/watch?v=UWJrpLFxkSA&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=23&t=781][L3.2.2]] | 13:01 | Partial derivatives types        | §3.4,§3.2 |
| [[https://www.youtube.com/watch?v=UWJrpLFxkSA&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=23&t=1526][L3.2.2]] | 25:26 | Expressions, functions, notation | §3.2      |
| [[https://www.youtube.com/watch?v=UWJrpLFxkSA&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=23&t=1848][L3.2.2]] | 30:48 | Partial derivatives examples     | §3.2      |
| [[https://www.youtube.com/watch?v=wIxpj1H-wN8&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=24][L3.2.3]] | 00:00 | Lagrangian case study            | §3.3      |
| [[https://www.youtube.com/watch?v=wIxpj1H-wN8&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=24&t=1311][L3.2.3]] | 21:51 | Lagrangian example               | §3.3      |
| [[https://www.youtube.com/watch?v=2aKYdhahbRA&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=25][L3.2.4]] | 00:00 | Haskell type classes in general  | §3.5      |
| [[https://www.youtube.com/watch?v=2aKYdhahbRA&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=25&t=281][L3.2.4]] | 04:41 | class Additive, Double, FunExp   | §3.5      |
| [[https://www.youtube.com/watch?v=mfX6xuOiXkU&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=26][L3.3.1]] | 00:00 | data FunExp, eval, R->R          | §3        |
| [[https://www.youtube.com/watch?v=mfX6xuOiXkU&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=26&t=405][L3.3.1]] | 04:45 | deriv :: FunExp -> FunExp        | §3.6      |
| [[https://www.youtube.com/watch?v=mfX6xuOiXkU&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=26&t=1040][L3.3.1]] | 17:20 | class Additive, Multiplicative   | §3.5      |
| [[https://www.youtube.com/watch?v=mfX6xuOiXkU&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=26&t=1551][L3.3.1]] | 25:51 | numeric instances for functions  | §3.5.3    |
|--------+-------+----------------------------------+-----------|

* Week 4 lecture videos:

|--------+-------+-------------------------------------+--------|
| [[https://www.youtube.com/watch?v=MMSXqshq_Ys&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=27][L4.1.1]] | 00:00 | Homomorphisms, H2, H1, H0           | §4.2   |
| [[https://www.youtube.com/watch?v=WJHVG-IMx-k&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=28][L4.1.2]] | 00:00 | Example: H2(odd,+,xor)              | §4.3.1 |
| [[https://www.youtube.com/watch?v=WJHVG-IMx-k&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=28&t=1070][L4.1.2]] | 17:50 | not Exists op. H2(isPrime,+,op)     | §4.3.2 |
| [[https://www.youtube.com/watch?v=lI8Bb5lHz1I&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=29][L4.1.3]] | 00:00 | Live coding H2(h,(+),(*))           | §4.3   |
| [[https://www.youtube.com/watch?v=qljehEikpkw&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=30][L4.1.4]] | 00:00 | Compositional semantics & Folds     | §4.3   |
| [[https://www.youtube.com/watch?v=qljehEikpkw&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=30&t=444][L4.1.4]] | 07:24 | fold for integer expressions        | §4.4   |
| [[https://www.youtube.com/watch?v=qljehEikpkw&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=30&t=966][L4.1.4]] | 16:06 | Define your own equality            | §4.4   |
| [[https://www.youtube.com/watch?v=qljehEikpkw&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=30&t=1139][L4.1.4]] | 18:59 | evenIE as a fold instance           | §4.4   |
| [[https://www.youtube.com/watch?v=aiVgiwQOtU8&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=31][L4.1.5]] | 00:00 | Make your own type class            | §4.4   |
| [[https://www.youtube.com/watch?v=y7XZ6y2NL3s&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=33][L4.2.1]] | 00:00 | Prove deriv is not a homomorphism   | §4.6   |
| [[https://www.youtube.com/watch?v=y7XZ6y2NL3s&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=33&t=820][L4.2.1]] | 13:40 | Core of the proof by contradiction  | §4.6   |
| [[https://www.youtube.com/watch?v=VgX-bNrPvZI&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=33][L4.2.2]] | 00:00 | tupling: der2 : F -> (F, F)         | §4.6   |
| [[https://www.youtube.com/watch?v=c4gO76MMXu4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=34][L4.2.3]] | 00:00 | live coding der2, tupling transform | §4.6   |
| [[https://www.youtube.com/watch?v=c4gO76MMXu4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=34&t=510][L4.2.3]] | 08:30 | der2 :: F -> Bi F; homomorphism     | §4.6   |
| [[https://www.youtube.com/watch?v=c4gO76MMXu4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=34&t=1167][L4.2.3]] | 19:27 | type class for FunExp + instances   | §4.5   |
| [[https://www.youtube.com/watch?v=y6weZisWeDM&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=35][L4.3.1]] | 00:00 | Structural homomorphism             | §4.2   |
| [[https://www.youtube.com/watch?v=LQjHFSZP-TM&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=36][L4.3.2]] | 00:00 | Live coding Monoid, Ring, Field     | §4.1   |
|--------+-------+-------------------------------------+--------|

* Week 5 lecture videos:

|--------+-------+------------------------------------------+------------|
| [[https://www.youtube.com/watch?v=IJcxf7Ar0sE&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=37][L5.1.1]] | 00:00 | Live coding applyFD                      | §4.6.1     |
| [[https://www.youtube.com/watch?v=IJcxf7Ar0sE&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=37?t=1303][L5.1.1]] | 21:43 | Bi a = (pos, speed)                      | §4.6.1     |
| [[https://www.youtube.com/watch?v=IJcxf7Ar0sE&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=37?t=1651][L5.1.1]] | 27:31 | equational reasoning: mulBi from mulFD   | §4.6.1     |
| [[https://www.youtube.com/watch?v=ZIRJxd50qQ4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=38][L5.1.2]] | 00:00 | Polynomials: types + eval + examples     | §5.1       |
| [[https://www.youtube.com/watch?v=ZIRJxd50qQ4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=38&t=1253][L5.1.2]] | 20:53 | Chebyshev polynomials                    | §5.1       |
| [[https://www.youtube.com/watch?v=DC8DvcA_h4s&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=39][L5.1.3]] | 00:00 | Polynomials and homomorphisms            | §5.1       |
| [[https://www.youtube.com/watch?v=DC8DvcA_h4s&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=39&t=501][L5.1.3]] | 00:00 | Equational reasoning (eval for Poly (+)) | §5.1       |
| [[https://www.youtube.com/watch?v=gGSDhyYeU4A&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=40][L5.2.1]] | 00:00 | Is degree maybe a homomorphism?          | §5.2, §5.3 |
| [[https://www.youtube.com/watch?v=3Er6ViQ_LZQ&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=41][L5.2.2]] | 00:00 | Polynomial division                      | §5.4, §5.5 |
| [[https://www.youtube.com/watch?v=dTffK5e-PRE&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=42][L5.2.3]] | 00:00 | Live coding polynomials: types, eval     | §5.1       |
| [[https://www.youtube.com/watch?v=z1zBUh4GvOE&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=43][L5.2.4]] | 00:00 | Coding the polynomial Ring in Haskell    | §5.1       |
| [[https://www.youtube.com/watch?v=-eHJgRnCaGE&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=44][L5.2.5]] | 00:00 | Power Series, deriv, integ, exp example  | §5.6       |
|--------+-------+------------------------------------------+------------|
* Week 6 lecture videos:

|--------+-------+--------------------------------------------------+-----------|
| [[https://www.youtube.com/watch?v=FLgx30dhgDg&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=45&pp=sAQB][L6.1.1]] | 00:00 | Power Series and Ordinary Differential Equations | §6.4      |
| [[https://www.youtube.com/watch?v=9zZK540ROFw&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=46&pp=sAQB][L6.1.2]] | 00:00 | Power Series transform for solving ODEs          | §6.4      |
| [[https://www.youtube.com/watch?v=g-wf17HLYUU&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=47&pp=sAQB][L6.1.3]] | 00:00 | Taylor & Maclaurin series                        | §6.1&§6.3 |
| [[https://www.youtube.com/watch?v=3Lj2mPNS08c&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=48][L6.1.4]] | 00:00 | Live coding: Power Series reminder               | §6.3      |
| [[https://www.youtube.com/watch?v=3Lj2mPNS08c&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=48&t=745][L6.1.4]] | 12:25 | Specification + type of "derivative series"      | §6.1      |
| [[https://www.youtube.com/watch?v=3Lj2mPNS08c&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=48&t=745][L6.1.4]] | 19:11 | Implement derDS, integDS, xDS, etc.              | §6.2      |
| [[https://www.youtube.com/watch?v=3Lj2mPNS08c&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=48&t=1971][L6.1.4]] | 32:51 | Implement mulDS (for "derivative series")        | §6        |
| [[https://www.youtube.com/watch?v=6u8fuEeau_Q&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=49][L6.2.1]] | 00:00 | FunExp special: fromRational . toRational        | §6.6      |
| [[https://www.youtube.com/watch?v=6u8fuEeau_Q&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=49&t=210][L6.2.1]] | 03:30 | FunExp recap: the Transcendental part            | §6.6      |
| [[https://www.youtube.com/watch?v=6u8fuEeau_Q&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=49&t=800][L6.2.1]] | 13:20 | Generic evaluator example: exp (-x²)             | §6.6      |
| [[https://www.youtube.com/watch?v=6u8fuEeau_Q&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=49&t=1050][L6.2.1]] | 17:30 | derivative series Transcendental instances       | §6.5      |
| [[https://www.youtube.com/watch?v=CL9jLoaRokc&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=50][L6.2.2]] | 00:00 | Power series transform in Haskell                | §6.4      |
|--------+-------+--------------------------------------------------+-----------|

* Week 7 lecture videos: [guest lectures by Nicola Botta]

|--------+-------+-----------------------------------------------+------|
| [[https://www.youtube.com/watch?v=gEwtvFEINOY&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=51][L7.1.1]] | 00:00 | class VectorSpace, scalar instance, bases     | §7   |
| [[https://www.youtube.com/watch?v=Nmi1wSpbKek&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=52][L7.1.2]] | 00:00 | vectors as functions, Finite,                 | §7.1 |
| [[https://www.youtube.com/watch?v=UQp3EBaa_eM&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=53][L7.1.3]] | 00:00 | AddGroup (g->s) reminder, canonical basis     | §7.2 |
| [[https://www.youtube.com/watch?v=UQp3EBaa_eM&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=53&t=776][L7.1.3]] | 12:56 | Linear tranformation, towards Matrix rep.     | §7.2 |
| [[https://www.youtube.com/watch?v=DDJSFM40bt0&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=54][L7.1.4]] | 00:00 | mulMV calculcation, transpose                 | §7.2 |
| [[https://www.youtube.com/watch?v=_-E-yCKCO_4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=55][L7.2.1]] | 00:00 | Q&A, Matrix mult. specification + properties  | §7.2 |
| [[https://www.youtube.com/watch?v=EzgR-IVugak&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=56][L7.2.2]] | 00:00 | Change of basis, inner product, norm          | §7.3 |
| [[https://www.youtube.com/watch?v=EzgR-IVugak&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=56&t=715][L7.2.2]] | 11:55 | Examples of matrix alg.,                      | §7.4 |
| [[https://www.youtube.com/watch?v=G5F1c3SNRMg&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=57][L7.2.3]] | 00:00 | polynomials: eval and deriv as LinTrans       | §7.4 |
| [[https://www.youtube.com/watch?v=X6vsNgyQmcI&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=58][L7.2.4]] | 00:00 | derivative and integration as inf.dim. matrix | §7.4 |
| [[https://www.youtube.com/watch?v=X6vsNgyQmcI&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=58&t=371][L7.2.4]] | 06:11 | dynamical systems using matrices              | §7.4 |
|--------+-------+-----------------------------------------------+------|


* Week 8 lecture videos:
|--------+-------+----------------------------------------------+--------|
| [[https://www.youtube.com/watch?v=OwgvSJf61cs&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=59&pp=sAQB][L8.1.1]] | 00:00 | Towards the Laplace transform                | §8.2   |
| [[https://www.youtube.com/watch?v=IOpBHmt3LQ8&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=60&pp=sAQB][L8.1.2]] | 00:00 | Laplace of exp, sin, cos                     | §8.2.1 |
| [[https://www.youtube.com/watch?v=qAnjkq8bQYQ&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=61&pp=sAQB][L8.1.3]] | 00:00 | Laplace transform solving an ODE             | §8.2   |
| [[https://www.youtube.com/watch?v=OgSgnBnz0uM&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=62&pp=sAQB][L8.2.1]] | 00:00 | Live coding Complex, e^ix = cos x + i*sin x  | §8.1   |
| [[https://www.youtube.com/watch?v=KdxlU4-fy00&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=63&pp=sAQB][L8.2.2]] | 00:00 | Laplace cos from exp, math. notation, FunExp | §8.4   |
| [[https://www.youtube.com/watch?v=3LGfaQZceAg&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=64][L8.2.3]] | 00:00 | DSLsofMath course / book overview            | DSLM   |
|--------+-------+----------------------------------------------+--------|

* 1. Types, Functions, and DSLs for Expressions (7-42)
+ The whole chapter is included in the course.
+ (Some of the material is also parts of the prerequisites.)
** 1.1 Types of data and functions {p8}
| [[https://www.youtube.com/watch?v=nsXgf1HF7E8&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=4&t=1019][L1.1.1]] | 27:00 | Types               | §1.1   |
| [[https://www.youtube.com/watch?v=nsXgf1HF7E8&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=4&t=1019][L1.1.1]] | 18:00 | DSL definition      | §1.1.1 |
| [[https://www.youtube.com/watch?v=nsXgf1HF7E8&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=4&t=1019][L1.1.1]] | 31:00 | enum Bool->Bool     | §1.1.2 |
| [[https://www.youtube.com/watch?v=80DeRjb06vI&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=8&t=28s][L1.1.2]] | 05:20 | enum Bool->Bool     | §1.1.2 |
| [[https://www.youtube.com/watch?v=80DeRjb06vI&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=8&t=28s][L1.1.2]] | 09:50 | floating point      | §1.1.3 |
** 1.2 Types in Haskell: type, newtype, and data {p14}
| [[https://www.youtube.com/watch?v=u5B-jiFDKto&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=1&t=3s][L1.0.1]] | 00:00 | TDD: id, const, (.) | §1.2   |
| [[https://www.youtube.com/watch?v=Mr_YFDX0C1w&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=2][L1.0.2]] | 00:00 | (,), swap, fst      | §1.2   |
| [[https://www.youtube.com/watch?v=Mr_YFDX0C1w&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=2][L1.0.2]] | 10:58 | tupling transform   | §1.2,1.8   |
| [[https://www.youtube.com/watch?v=NsSVRkxDdfQ&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=3][L1.0.3]] | 00:00 | Either, Left, Right | §1.2   |
| [[https://www.youtube.com/watch?v=NsSVRkxDdfQ&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=3][L1.0.3]] | 04:12 | either, patterns    | §1.2   |
| [[https://www.youtube.com/watch?v=80DeRjb06vI&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=8&t=28s][L1.1.2]] | 00:00 | Haskell intro       | §1.2   |
| [[https://www.youtube.com/watch?v=80DeRjb06vI&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=8&t=28s][L1.1.2]] | 18:47 | DSL for expressions | §1.2   |
| [[https://youtu.be/QSc-kFxXUbA][L1.2.4]] | 38:20 | Types               | §1.2   |
** 1.3 Notation and abstract syntax for sequences {p16}
+ Included in the course but not presented in a week 1 lecture.
| [[https://www.youtube.com/watch?v=4pyw7pw_yr4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=13&t=755 ][L2.1.4]] | 12:35 | lift2 and friends       | §1.3   |
** 1.4 A DSL of complex numbers {p18}
| [[https://www.youtube.com/watch?v=tKznC6F_P0s][L1.2.3]] | 01:00 | Live code complex   | §1.4   |
| [[https://youtu.be/QSc-kFxXUbA][L1.2.4]] | 00:00 | Complex cont.       | §1.4   |
| [[https://youtu.be/QSc-kFxXUbA][L1.2.4]] | 02:57 | Eq check + deriving | §1.4   |
** 1.5 A syntax for (complex) arithmetical expressions {p24}
| [[https://youtu.be/QSc-kFxXUbA][L1.2.4]] | 14:18 | DSL complex         | §1.5   |
** 1.6 Laws, properties and testing {p26}
+ The section is included in the course but only partly presented in the lectures.
| [[https://www.youtube.com/watch?v=80DeRjb06vI&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=8&t=28s][L1.1.2]] | 15:00 | Associative law     | §1.6   |
** 1.7 Types of functions, expressions and operators {p29}
| [[https://www.youtube.com/watch?v=nsXgf1HF7E8&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=4&t=1019][L1.1.1]] | 20:00 | Jamboard examples   | §1.7   |
| [[https://www.youtube.com/watch?v=nsXgf1HF7E8&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=4&t=1019][L1.1.1]] | 25:00 | "the function f(x)" | §1.7   |
| [[https://www.youtube.com/watch?v=80DeRjb06vI&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=8&t=28s][L1.1.2]] | 26:30 | Expr. of one var.   | §1.7   |

* 2. DSLs for logic and proofs (43-80)
| [[https://www.youtube.com/watch?v=px_b66qzK2w&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=10       ][L2.1.1]] | 00:00 | L2.1 admin              | §2     |
** 2.1 Propositional Calculus {p43}
| [[https://www.youtube.com/watch?v=j456QTzS7O4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=11       ][L2.1.2]] | 00:00 | Propositional Calculus  | §2.1   |
| [[https://www.youtube.com/watch?v=4pyw7pw_yr4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=13       ][L2.1.4]] | 00:00 | live coding Prop, eval  | §2.1   |
| [[https://www.youtube.com/watch?v=4pyw7pw_yr4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=13&t=220 ][L2.1.4]] | 03:40 | impl. eval without Name | §2.1   |
| [[https://www.youtube.com/watch?v=4pyw7pw_yr4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=13&t=441 ][L2.1.4]] | 07:21 | eval: adding Name case  | §2.1   |
| [[https://www.youtube.com/watch?v=j456QTzS7O4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=11&t=817 ][L2.1.2]] | 13:37 | data Prop, eval start   | §2.1.1 |
| [[https://www.youtube.com/watch?v=Lz17yvfSacE&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=18][L2.3.1]] | 00:00 | Prop and its eval       | §2.1.1 |
| [[https://www.youtube.com/watch?v=j456QTzS7O4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=11&t=200 ][L2.1.2]] | 03:20 | Truth table for (=>)    | §2.1.2 |
| [[https://www.youtube.com/watch?v=j456QTzS7O4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=11&t=384 ][L2.1.2]] | 06:24 | Truth tab. swap         | §2.1.2 |
| [[https://www.youtube.com/watch?v=j456QTzS7O4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=11&t=630 ][L2.1.2]] | 10:30 | Tautology               | §2.1.2 |
| [[https://www.youtube.com/watch?v=j456QTzS7O4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=11&t=1568][L2.1.2]] | 26:08 | AndIntro, OrIntroL      | §2.1.3 |
| [[https://www.youtube.com/watch?v=Lz17yvfSacE&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=18&t=196][L2.3.1]] | 03:16 | data Proof + checkProof | §2.1.3 |
| [[https://www.youtube.com/watch?v=Lz17yvfSacE&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=18&t=546][L2.3.1]] | 09:06 | checkProof examples     | §2.1.4 |
| [[https://www.youtube.com/watch?v=Ey_9KP-9wlU&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=16][L2.2.3]] | 00:00 | Live code: proof terms  | §2.1.5 |
| [[https://www.youtube.com/watch?v=j456QTzS7O4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=11&t=1806][L2.1.2]] | 30:06 | fst, snd, orElim        | §2.1.6 |
| [[https://www.youtube.com/watch?v=Ey_9KP-9wlU&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=23&t=518s ][L2.2.3]] | 08:38 | inhabited types are Tru | §2.1.6 |
| [[https://www.youtube.com/watch?v=Ey_9KP-9wlU&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=23&t=770s ][L2.2.3]] | 13:02 | Or p q => Or q p        | §2.1.6 |
| [[https://www.youtube.com/watch?v=Ey_9KP-9wlU&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=23&t=770s ][L2.2.3]] | 15:18 | Not(Not(Or p (Not p)))  | §2.1.7 |
** 2.2 First Order Logic {p57}
| [[https://www.youtube.com/watch?v=LwoQjzFBt5k&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=14][L2.2.1]] | 00:00 | First Order Logic       | §2.2   |
| [[https://www.youtube.com/watch?v=LwoQjzFBt5k&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=14&t=269][L2.2.1]] | 04:29 | FOL predicate examples  | §2.2   |
| [[https://www.youtube.com/watch?v=LwoQjzFBt5k&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=14&t=938][L2.2.1]] | 15:38 | data FOL, data Dom      | §2.2   |
| [[https://www.youtube.com/watch?v=LwoQjzFBt5k&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=14&t=1298][L2.2.1]] | 21:38 | GADTs extension mention | §2.2   |
| [[https://www.youtube.com/watch?v=LwoQjzFBt5k&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=14][L2.2.1]] | 23:00 | Interpret FOL-syntax    | §2.2   |
| [[https://www.youtube.com/watch?v=LwoQjzFBt5k&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=14&t=519][L2.2.1]] | 08:39 | Quantifiers             | §2.2.2 |
| [[https://www.youtube.com/watch?v=LwoQjzFBt5k&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=14&t=1668][L2.2.1]] | 27:48 | Typed quantifiers       | §2.2.4 |
| [[https://youtu.be/LwoQjzFBt5k?list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&t=1978][L2.2.1]] | 32:58 | de Morgan, not quant.   | §2.2.4 |
** 2.3 An aside: Pure set theory {p64}
| [[https://www.youtube.com/watch?v=fM2PYaVUH5g&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=12       ][L2.1.3]] | 00:00 | Pure set theory         | §2.3   |
| [[https://www.youtube.com/watch?v=fM2PYaVUH5g&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=12&t=529 ][L2.1.3]] | 08:49 | union, card examples    | §2.3   |
| [[https://www.youtube.com/watch?v=fM2PYaVUH5g&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=12&t=1025][L2.1.3]] | 17:05 | union computation table | §2.3   |
** 2.4 Example proofs: contradiction, cases, primes {p66}
| [[https://www.youtube.com/watch?v=RauIPv-hEY0&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=15][L2.2.2]] | 00:00 | Proof by contradiction  | §2.4.1 |
| [[https://www.youtube.com/watch?v=RauIPv-hEY0&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=15&t=874][L2.2.2]] | 14:34 | Proof by cases          | §2.4.2 |
** 2.5 Basic concepts of calculus {p69}
| [[https://www.youtube.com/watch?v=kqhGY6v7feU&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=18][L3.1.1]]  | 00:00 | Limit of function              | §2.5.3 |
| [[https://www.youtube.com/watch?v=kqhGY6v7feU&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=18&t=365][L3.1.1]]  | 06:01 | Scope check lim logic          | §2.5.3 |
** 2.6 Exercises {p75}
* 3. Types in Mathematics (81-100)
| [[https://www.youtube.com/watch?v=mfX6xuOiXkU&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=26][L3.3.1]] | 00:00 | data FunExp, eval, R->R          | §3        |
** 3.1 Typing Mathematics: derivative of a function {p81}
| [[https://www.youtube.com/watch?v=lBxyARMvhbY&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=19][L3.1.2]]  | 00:00 | Lim properties and types       | §3.1   |
| [[https://www.youtube.com/watch?v=lBxyARMvhbY&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=19&t=630][L3.1.2]]  | 10:30 | Deriv. of function             | §3.1   |
| [[https://www.youtube.com/watch?v=wxFVoFZ-Sz4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=20][L3.1.3]]  | 00:00 | Deriv. examples                | §3.1   |
| [[https://www.youtube.com/watch?v=wxFVoFZ-Sz4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=20&t=300][L3.1.3]]  | 05:00 | D (^2)  =  (2*)                | §3.1   |
| [[https://www.youtube.com/watch?v=wxFVoFZ-Sz4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=20&t=732][L3.1.3]]  | 12:12 | D (f + g)  =  D f  +  D g      | §3.1   |
** 3.2 Typing Mathematics: partial derivative {p82}
| [[https://www.youtube.com/watch?v=UWJrpLFxkSA&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=23][L3.2.2]] | 00:00 | Partial derivatives quote        | §3.2      |
| [[https://www.youtube.com/watch?v=UWJrpLFxkSA&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=23&t=781][L3.2.2]] | 13:01 | Partial derivatives types        | §3.2      |
| [[https://www.youtube.com/watch?v=UWJrpLFxkSA&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=23&t=1526][L3.2.2]] | 25:26 | Expressions, functions, notation | §3.2      |
| [[https://www.youtube.com/watch?v=UWJrpLFxkSA&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=23&t=1848][L3.2.2]] | 30:48 | Partial derivatives examples     | §3.2      |
** 3.3 Typing Mathematics: Lagrangian case study {p85}
| [[https://www.youtube.com/watch?v=wIxpj1H-wN8&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=24][L3.2.3]] | 00:00 | Lagrangian case study            | §3.3      |
| [[https://www.youtube.com/watch?v=wIxpj1H-wN8&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=24&t=1311][L3.2.3]] | 21:51 | Lagrangian example               | §3.3      |
** 3.4 Incremental analysis with types {p88}
| [[https://www.youtube.com/watch?v=UWJrpLFxkSA&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=23&t=781][L3.2.2]] | 13:01 | Partial derivatives types        | §3.4,§3.2 |
** 3.5 Type classes {p90}
| [[https://www.youtube.com/watch?v=2aKYdhahbRA&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=25][L3.2.4]] | 00:00 | Haskell type classes             | §3.5      |
| [[https://www.youtube.com/watch?v=2aKYdhahbRA&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=25&t=281][L3.2.4]] | 04:41 | class Additive, Double, FunExp   | §3.5      |
| [[https://www.youtube.com/watch?v=mfX6xuOiXkU&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=26&t=1040][L3.3.1]] | 17:20 | class Additive, Multiplicative   | §3.5      |
| [[https://www.youtube.com/watch?v=mfX6xuOiXkU&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=26&t=1551][L3.3.1]] | 25:51 | numeric instances for functions  | §3.5.3    |
** 3.6 Computing derivatives {p95}
| [[https://www.youtube.com/watch?v=rBj7-4xAzM4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=21][L3.1.4]] | 00:00 | Live coding deriv in Haskell     | §3.6   |
| [[https://www.youtube.com/watch?v=rBj7-4xAzM4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=21&t=461][L3.1.4]] | 07:41 | deriv :: FunExp -> FunExp        | §3.6   |
| [[https://www.youtube.com/watch?v=mfX6xuOiXkU&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=26&t=405][L3.3.1]] | 04:45 | cont. deriv :: FunExp -> FunExp  | §3.6   |
** 3.7 Exercises {p98}
* 4. Compositionality and Algebras (101-140)
** 4.1 Algebraic Structures {p102}
| [[https://www.youtube.com/watch?v=LQjHFSZP-TM&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=36][L4.3.2]] | 00:00 | Live coding Monoid, Ring, Field     | §4.1   |
** 4.2 Homomorphisms {p105}
| [[https://www.youtube.com/watch?v=MMSXqshq_Ys&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=27][L4.1.1]] | 00:00 | Homomorphisms, H2, H1, H0           | §4.2   |
| [[https://www.youtube.com/watch?v=y6weZisWeDM&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=35][L4.3.1]] | 00:00 | Structural homomorphism             | §4.2   |
** 4.3 Compositional semantics {p109}
| [[https://www.youtube.com/watch?v=WJHVG-IMx-k&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=28][L4.1.2]] | 00:00 | Example: H2(odd,+,xor)          | §4.3.1 |
| [[https://www.youtube.com/watch?v=WJHVG-IMx-k&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=28&t=1070][L4.1.2]] | 17:50 | not Exists op. H2(isPrime,+,op) | §4.3.2 |
| [[https://www.youtube.com/watch?v=lI8Bb5lHz1I&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=29][L4.1.3]] | 00:00 | Live coding H2(h,(+),(*))       | §4.3   |
| [[https://www.youtube.com/watch?v=qljehEikpkw&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=30][L4.1.4]] | 00:00 | Compositional semantics & Folds | §4.3   |
** 4.4 Folds {p111}
| [[https://www.youtube.com/watch?v=qljehEikpkw&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=30&t=444][L4.1.4]] | 07:24 | fold for integer expressions    | §4.4   |
| [[https://www.youtube.com/watch?v=qljehEikpkw&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=30&t=966][L4.1.4]] | 16:06 | Define your own equality        | §4.4   |
| [[https://www.youtube.com/watch?v=qljehEikpkw&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=30&t=1139][L4.1.4]] | 18:59 | evenIE as a fold instance       | §4.4   |
| [[https://www.youtube.com/watch?v=aiVgiwQOtU8&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=31][L4.1.5]] | 00:00 | Make your own type class        | §4.4   |
** 4.5 Initial and Free Structures {p116}
| [[https://www.youtube.com/watch?v=c4gO76MMXu4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=34&t=1167][L4.2.3]] | 19:27 | type class for FunExp + instances   | §4.5   |
** 4.6 Computing derivatives, reprise {p122}
| [[https://www.youtube.com/watch?v=y7XZ6y2NL3s&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=33][L4.2.1]] | 00:00 | Prove deriv is not a homomorphism   | §4.6   |
| [[https://www.youtube.com/watch?v=y7XZ6y2NL3s&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=33&t=820][L4.2.1]] | 13:40 | Core of the proof by contradiction  | §4.6   |
| [[https://www.youtube.com/watch?v=VgX-bNrPvZI&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=33][L4.2.2]] | 00:00 | tupling: der2 : F -> (F, F)         | §4.6   |
| [[https://www.youtube.com/watch?v=c4gO76MMXu4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=34][L4.2.3]] | 00:00 | live coding der2, tupling transform | §4.6   |
| [[https://www.youtube.com/watch?v=c4gO76MMXu4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=34&t=510][L4.2.3]] | 08:30 | der2 :: F -> Bi F; homomorphism     | §4.6   |
| [[https://www.youtube.com/watch?v=IJcxf7Ar0sE&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=37][L5.1.1]] | 00:00 | Live coding applyFD                      | §4.6.1 |
| [[https://www.youtube.com/watch?v=IJcxf7Ar0sE&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=37?t=1303][L5.1.1]] | 21:43 | Bi a = (pos, speed)                      | §4.6.1 |
| [[https://www.youtube.com/watch?v=IJcxf7Ar0sE&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=37?t=1651][L5.1.1]] | 27:31 | equational reasoning: mulBi from mulFD   | §4.6.1 |
** 4.7 Summary {p126}
** 4.8 Beyond Algebras: Co-algebra and the Stream calculus {p128}
** 4.9 A solved exercise {p129}
** 4.10 Exercises {p134}

* 5. Polynomials and Power Series (141-157)
** 5.1 Polynomials {p141}
| [[https://www.youtube.com/watch?v=ZIRJxd50qQ4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=38][L5.1.2]] | 00:00 | Polynomials: types + eval + examples     | §5.1   |
| [[https://www.youtube.com/watch?v=ZIRJxd50qQ4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=38&t=1253][L5.1.2]] | 00:00 | Chebyshev polynomials                    | §5.1   |
| [[https://www.youtube.com/watch?v=DC8DvcA_h4s&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=39][L5.1.3]] | 00:00 | Polynomials and homomorphisms            | §5.1   |
| [[https://www.youtube.com/watch?v=DC8DvcA_h4s&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=39&t=501][L5.1.3]] | 00:00 | Equational reasoning (eval for Poly (+)) | §5.1   |
| [[https://www.youtube.com/watch?v=dTffK5e-PRE&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=42][L5.2.3]] | 00:00 | Live coding polynomials: types, eval     | §5.1       |
| [[https://www.youtube.com/watch?v=z1zBUh4GvOE&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=43][L5.2.4]] | 00:00 | Coding the polynomial Ring in Haskell    | §5.1       |
** 5.2 Division and the degree of the zero polynomial {p147}
| [[https://www.youtube.com/watch?v=gGSDhyYeU4A&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=40][L5.2.1]] | 00:00 | Is degree maybe a homomorphism?          | §5.2, §5.3 |
** 5.3 Polynomial degree as a homomorphism {p148}
| [[https://www.youtube.com/watch?v=gGSDhyYeU4A&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=40][L5.2.1]] | 00:00 | Is degree maybe a homomorphism?          | §5.2, §5.3 |
** 5.4 Power Series {p149}
| [[https://www.youtube.com/watch?v=3Er6ViQ_LZQ&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=41][L5.2.2]] | 00:00 | Polynomial division                      | §5.4, §5.5 |
** 5.5 Operations on power series {p152}
| [[https://www.youtube.com/watch?v=3Er6ViQ_LZQ&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=41][L5.2.2]] | 00:00 | Polynomial division                      | §5.4, §5.5 |
** 5.6 Formal derivative {p153}
| [[https://www.youtube.com/watch?v=-eHJgRnCaGE&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=44][L5.2.5]] | 00:00 | Power Series, deriv, integ, exp example  | §5.6       |
** 5.7 Exercises {p155}
* 6. Taylor and Maclaurin series (158-174)
| [[https://www.youtube.com/watch?v=3Lj2mPNS08c&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=48&t=1971][L6.1.4]] | 32:51 | Implement mulDS (for "derivative series")        | §6        |
** 6.1 Taylor series {p161}
| [[https://www.youtube.com/watch?v=g-wf17HLYUU&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=47&pp=sAQB][L6.1.3]] | 00:00 | Taylor & Maclaurin series                        | §6.1&§6.3 |
| [[https://www.youtube.com/watch?v=3Lj2mPNS08c&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=48&t=745][L6.1.4]] | 12:25 | Specification + type of "derivative series"      | §6.1      |
** 6.2 Derivatives and Integrals for Maclaurin series {p164}
| [[https://www.youtube.com/watch?v=3Lj2mPNS08c&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=48&t=745][L6.1.4]] | 19:11 | Implement derDS, integDS, xDS, etc.              | §6.2      |
** 6.3 Integral for Formal Power series {p164}
| [[https://www.youtube.com/watch?v=g-wf17HLYUU&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=47&pp=sAQB][L6.1.3]] | 00:00 | Taylor & Maclaurin series                        | §6.1&§6.3 |
| [[https://www.youtube.com/watch?v=3Lj2mPNS08c&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=48][L6.1.4]] | 00:00 | Live coding: Power Series reminder               | §6.3      |
** 6.4 Simple differential equations {p165}
| [[https://www.youtube.com/watch?v=FLgx30dhgDg&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=45&pp=sAQB][L6.1.1]] | 00:00 | Power Series and Ordinary Differential Equations | §6.4      |
| [[https://www.youtube.com/watch?v=9zZK540ROFw&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=46&pp=sAQB][L6.1.2]] | 00:00 | Power Series transform for solving ODEs          | §6.4      |
| [[https://www.youtube.com/watch?v=CL9jLoaRokc&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=50][L6.2.2]] | 00:00 | Power series transform in Haskell                | §6.4      |
** 6.5 Exponentials and trigonometric functions {p168}
| [[https://www.youtube.com/watch?v=6u8fuEeau_Q&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=49&t=1050][L6.2.1]]   | 17:30 | derivative series Transcendental instances       | §6.5      |
** 6.6 Associated code {p170}
| [[https://www.youtube.com/watch?v=6u8fuEeau_Q&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=49][L6.2.1]]   | 00:00 | FunExp special: fromRational . toRational        | §6.6      |
| [[https://www.youtube.com/watch?v=6u8fuEeau_Q&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=49&t=210][L6.2.1]]   | 03:30 | FunExp recap: the Transcendental part            | §6.6      |
| [[https://www.youtube.com/watch?v=6u8fuEeau_Q&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=49&t=800][L6.2.1]]   | 13:20 | Generic evaluator example: exp (-x²)             | §6.6      |
** 6.7 Exercises {p172}

* 7. Elements of Linear Algebra (175-203)
| [[https://www.youtube.com/watch?v=gEwtvFEINOY&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=51][L7.1.1]] | 00:00 | class VectorSpace, scalar instance, bases | §7   |
** 7.1 Representing vectors as functions {p178}
| [[https://www.youtube.com/watch?v=Nmi1wSpbKek&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=52][L7.1.2]] | 00:00 | vectors as functions, Finite,             | §7.1 |
** 7.2 Linear transformations {p181}
| [[https://www.youtube.com/watch?v=UQp3EBaa_eM&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=53][L7.1.3]] | 00:00 | AddGroup (g->s) reminder, canonical basis | §7.2 |
| [[https://www.youtube.com/watch?v=UQp3EBaa_eM&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=53&t=776][L7.1.3]] | 12:56 | Linear tranformation, towards Matrix rep. | §7.2 |
| [[https://www.youtube.com/watch?v=DDJSFM40bt0&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=54][L7.1.4]] | 00:00 | mulMV calculcation, transpose             | §7.2 |
| [[https://www.youtube.com/watch?v=_-E-yCKCO_4&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=55][L7.2.1]] | 00:00 | Q&A, Matrix mult. specification + properties  | §7.2 |
** 7.3 Inner products {p184}
| [[https://www.youtube.com/watch?v=EzgR-IVugak&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=56][L7.2.2]] | 00:00 | Change of basis, inner product, norm          | §7.3 |
** 7.4 Examples of matrix algebra {p186}
| [[https://www.youtube.com/watch?v=EzgR-IVugak&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=56&t=715][L7.2.2]] | 11:55 | Examples of matrix alg.,                      | §7.4 |
| [[https://www.youtube.com/watch?v=G5F1c3SNRMg&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=57][L7.2.3]] | 00:00 | polynomials: eval and deriv as LinTrans       | §7.4 |
| [[https://www.youtube.com/watch?v=X6vsNgyQmcI&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=58][L7.2.4]] | 00:00 | derivative and integration as inf.dim. matrix | §7.4 |
| [[https://www.youtube.com/watch?v=X6vsNgyQmcI&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=58&t=371][L7.2.4]] | 06:11 | dynamical systems using matrices              | §7.4 |
** 7.5 * Monadic dynamical systems {p197}
** 7.6 Associated code {p200}
** 7.7 Exercises {p202}

* 8. Exponentials and Laplace (204-218)
** 8.1 The Exponential Function {p204}
| [[https://www.youtube.com/watch?v=OgSgnBnz0uM&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=62&pp=sAQB][L8.2.1]] | 00:00 | Live coding Complex, e^ix = cos x + i*sin x  | §8.1   |
** 8.2 The Laplace transform {p209}
| [[https://www.youtube.com/watch?v=OwgvSJf61cs&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=59&pp=sAQB][L8.1.1]] | 00:00 | Towards the Laplace transform                | §8.2   |
| [[https://www.youtube.com/watch?v=IOpBHmt3LQ8&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=60&pp=sAQB][L8.1.2]] | 00:00 | Laplace of exp, sin, cos                     | §8.2.1 |
| [[https://www.youtube.com/watch?v=qAnjkq8bQYQ&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=61&pp=sAQB][L8.1.3]] | 00:00 | Laplace transform solving an ODE             | §8.2   |
** 8.3 Laplace and other transforms {p216}
** 8.4 Exercises {p217}
| [[https://www.youtube.com/watch?v=KdxlU4-fy00&list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ&index=63&pp=sAQB][L8.2.2]] | 00:00 | Laplace cos from exp, math. notation, FunExp | §8.4   |
* 9. Probability Theory (219-241)
+ This Chapter is not covered by the DSLsofMath course 2022
** 9.1 Sample spaces {p220}
** 9.2 *Monad Interface {p223}
** 9.3 Distributions {p223}
** 9.4 Semantics of spaces {p225}
** 9.5 Random Variables {p228}
** 9.6 Events and probability {p230}
** 9.7 Examples: Dice, Drugs, Monty Hall {p234}
** 9.8 *Solving a problem with equational reasoning {p237}

* A The course “DSLs of Mathematics”

* B Parameterised Complex Numbers

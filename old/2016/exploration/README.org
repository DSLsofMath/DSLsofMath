* Matrix algebra
  Exploring different encodings of matrix algebra in order to
  implement algorithms for solving systems of linear equations from [[http://www.cs.cmu.edu/~quake-papers/painless-conjugate-gradient.pdf]["An
  introduction to the conjugate gradient method without the agonizing
  pain"]].

** Files
   - [[MatrixAlgebra1.hs][MatrixAlgebra1]]: 2-by-2 matrices and vectors using tuples
   - [[MatrixAlgebra1/CG.hs][MatrixAlgebra1.CG1]]: Solution techniques from article
   - [[MatrixAlgebra2.hs][MatrixAlgebra2]]: 2^n-by-2^n matrices using a recursive
     representation

* Power series

  - [[PowerSeries.hs][PowerSeries]]: Code from [[http://citeseerx.ist.psu.edu/viewdoc/download?doi%3D10.1.1.333.3156&rep%3Drep1&type%3Dpdf]["Power series, power serious"]]

* ireal - real numbers + intervals
  - Simple to use (implements Num class).
  - If there is to be numerical work in the course ireal would
    probably be suitable if Double does not give good enough
    precision.
  - Some nested operations might become exponential (as documented in
    https://github.com/sydow/ireal/raw/master/doc/ireal.pdf). It seems
    good understanding of the library is necessary to avoid them.
  - Contains example implementations of algorithms using the
    package. ~applications/FAD.hs~ has a short implementation of AD
    that might be interesting.


* Other interesting things
** Automatic differentiation
   - http://conal.net/papers/beautiful-differentiation/
   - http://hackage.haskell.org/package/ad

** Numbers in Haskell
   - Real numbers: http://hackage.haskell.org/package/numbers
   - Intervals: http://hackage.haskell.org/package/intervals
   - real numbers+intervals: https://hackage.haskell.org/package/ireal
